---
interface Props {
  pathname?: string; // Make it optional
}

const { pathname = '' } = Astro.props; // Provide a default empty string

const getLinkClass = (path: string) => {
  const baseClass = "relative hover:text-primary-dark text-lg px-3";
  const activeClass = "relative before:absolute before:bg-primary-dark before:top-0 before:left-0 before:h-full before:w-[4px] md:before:bottom-0 md:before:left-0 md:before:w-full md:before:h-[6px] md:before:top-7";
  return `${baseClass} ${pathname === path || (path === '/blog' && pathname.startsWith('/blog')) ? activeClass : ''}`;
};
---

<header id="main-header" class="bg-white text-black sticky top-0 z-50 transition-shadow duration-300 py-4 px-8">
    <div class="container mx-auto flex justify-between items-center">
        <a href="/" class="text-2xl font-bold text-primary" aria-label="Home - Zaada Bana Engineering"><img src="/Screenshot_20250703_182113.png" alt="Zaada Bana Engineering Logo" class="h-10"></a>
        <button id="menu-toggle" class="md:hidden focus:outline-none">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path></svg>
        </button>
        <nav id="main-nav" class="hidden flex flex-col space-y-2 md:flex md:flex-row md:space-y-0 md:space-x-4 absolute md:relative top-full left-0 w-full md:w-auto bg-white md:bg-transparent p-4 md:p-0 shadow-md md:shadow-none">
            <a href="/" class={getLinkClass('/')}>Home</a>
            <a href="/about" class={getLinkClass('/about')}>About</a>
            <a href="/services" class={getLinkClass('/services')}>Services</a>
            <a href="/projects" class={getLinkClass('/projects')}>Projects</a>
            <a href="/blog" class={getLinkClass('/blog')}>Blog</a>
            <a href="/contact" class={getLinkClass('/contact')}>Contact</a>
        </nav>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const menuToggle = document.getElementById('menu-toggle');
        const mainNav = document.getElementById('main-nav');

        menuToggle.addEventListener('click', function() {
            mainNav.classList.toggle('hidden');
        });

        // Close menu when a link is clicked (for mobile)
        mainNav.querySelectorAll('a').forEach(link => {
            link.addEventListener('click', () => {
                if (!mainNav.classList.contains('hidden')) {
                    mainNav.classList.add('hidden');
                }
            });
        });

        // Close menu if screen is resized to desktop while menu is open
        window.addEventListener('resize', () => {
            if (window.innerWidth >= 768 && !mainNav.classList.contains('hidden')) {
                mainNav.classList.add('hidden');
            }
        });
    });
</script>
    </div>
</header>